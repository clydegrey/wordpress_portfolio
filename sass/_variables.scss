



/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

a:visited,
a:focus,
a:hover,
a:active {
    text-decoration: none;
    outline:0;

}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

* {
  box-sizing: border-box;
}
*:after,
*:before {
  box-sizing: border-box;
}

// /* ==========================================================================
//    EXAMPLE Media Queries for Responsive Design.
//    These examples override the primary ('mobile first') styles.
//    Modify as content requires.
//    ========================================================================== */


$colorWhite:#fff;
$colorBlue:#00ffff;
$colorBlack: #0C1525;

$colorBlackAlpha:rgba(12,21,37,.4);
$colorBlackAlphaDark:rgba(12,21,37,.8);

$colorBlueMid: red;
$colorGreen:#607E7E;
$colorGreenAlpha:rgba(96,126,126,.8);
$colorGreenAlphaLight:rgba(96,126,126,.4);

$colorYellowAlpha:rgba(246,174,45,.8);
$colorBlue: rgba(11, 79, 108,1);
$colorBlueAlpha:rgba(11, 79, 108,.8);

$colorBlue: #1D84B5;
$colorBlue:#36aa9d;
$colorBlue:#1AC8ED;
// $colorButton: $colorBlueAlpha;
// $colorButtonBackground:$colorBlueAlpha;
$colorButton: $colorBlue;
$colorButtonBackground:$colorBlue;


$font-contrail:'Contrail One', cursive;
$font-lato:'Lato', sans-serif;
$font-oswald:'oswald', san-serif;
$font-raleway:'raleway',sans-serif;
$font-main:$font-raleway;
$logo:$font-contrail;
$logo:$font-contrail;
$font-links:$font-contrail;
$font-anton:anton;


@keyframes glowing {
  from {
    text-shadow: 0 0 3px #fff, 0 0 6px #fff, 0 0 10px #fff, 0 0 13px $colorGreenAlpha, 0 0 63px $colorGreenAlpha, 0 0 26px $colorGreenAlpha, 0 0 33px $colorGreenAlpha, 0 0 50px $colorGreenAlpha;
  }
  to {
    text-shadow: 0 0 1px #fff, 0 0 3px #fff, 0 0 5px #fff, 0 0 6px $colorGreenAlpha, 0 0 11px $colorGreenAlpha, 0 0 13px $colorGreenAlpha, 0 0 16px $colorGreenAlpha, 0 0 25px $colorGreenAlpha;
  }
}


